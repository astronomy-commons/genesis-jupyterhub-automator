#!/bin/bash
#
# Create a Kubernetes Cluster based on the available config
#

set -e

# Switch to deployment directory and load the config
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
cd "$(dirname $DIR)"
. config
. scripts/common.sh

assert_defined CLUSTER_NAME REGION NODE_POOL_NAME SIZE NODES K8S_VERSION CONTEXT

if [[ $PROVIDER == do ]]; then
	# Check if this cluster already exists; do nothing if it does
	if doctl k8s cluster list --format Name --no-header | grep -qE '^'"$CLUSTER_NAME"'$'; then
		echo "cluster $CLUSTER_NAME already exists; will not attepmt to re-create" 1>&2
	else
		# Create the cluster
		doctl k8s cluster create $CLUSTER_NAME --region $REGION --node-pool="name=$NODE_POOL_NAME;size=$SIZE;count=$NODES" --version="$K8S_VERSION"
	fi
elif [[ $PROVIDER == aws ]]; then
	clusters=$(eksctl get cluster --output json)
	cluster_exists=$(echo $clusters | jq --arg CLUSTER_NAME "${CLUSTER_NAME}" ' .[] | select(.name==$CLUSTER_NAME) ')

	if [[ $cluster_exists ]]; then
		echo "cluster $CLUSTER_NAME already exists; will not attepmt to re-create" 1>&2
	else
		# create the cluster
		eksctl create cluster -f eksctl/cluster.yaml
	fi

	storage_class=$(kubectl get storageclass gp2 --output json)
	storage_class_waits_for_first_consumer=$(echo $storage_class | jq ' .volumeBindingMode == "WaitForFirstConsumer" ')
	if [[ $storage_class_waits_for_first_consumer == true ]]; then
		# update storage class
		echo "Setting gp2 storage class to bind immediately to new pods."
		kubectl delete storageclass gp2
		updated_storage_class=$(echo $storage_class | jq ' .volumeBindingMode = "Immediate" ')
		kubectl create -f <(echo $storage_class | jq ' .volumeBindingMode = "Immediate" ')
	else
		echo "gp2 storage class already set to bind immediately to new pods."
	fi
else
  echo "$PROVIDER not supported for generating Kubernetes Clusters"
fi

# Switch kubectl context to the newly created cluster
if [[ $(kubectl config current-context) != "$CONTEXT" ]]; then
	kubectl config use-context $CONTEXT
else
	echo "kubectl context already set to $CLUSTER_NAME; leaving unchanged."
fi
